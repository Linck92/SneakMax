//Объявляем переменные для различных диапазонов экранов
$desktop-l: 1580px;
$desktop: 1280px;
$tablet: 1023px;
$mobile-l: 885px;
$mobile: 767px;
$mobile-s: 480px;
//Если мы захотим применить mobile-first подход нам могут понадобиться следющие переменные
$desktop-above: 1281px;
$tablet-above: 1024px;
$mobile-l-above: 886px;
$mobile-above: 768px;
$mobile-s-above: 481px;

@mixin desktop-l {
    @media (max-width: $desktop-l) {
        @content;// благоря этому мы можем прям в .class пописать медиазапрос (пример ниже)
    }
}

@mixin desktop {
    @media (max-width: $desktop) {
        @content;// благоря этому мы можем прям в .class пописать медиазапрос (пример ниже)
    }
}

@mixin desktop-above {
    @media (min-width: $desktop-above) {
        @content;// благоря этому мы можем прям в .class пописать медиазапрос (пример ниже)
    }
}

@mixin tablet {
    @media (max-width: $tablet) {
        @content;// благоря этому мы можем прям в .class пописать медиазапрос (пример ниже)
    }
}

@mixin tablet-above {
    @media (min-width: $tablet-above) {
        @content;// благоря этому мы можем прям в .class пописать медиазапрос (пример ниже)
    }
}

@mixin mobile-l {
    @media (max-width: $mobile-l) {
        @content;// благоря этому мы можем прям в .class пописать медиазапрос (пример ниже)
    }
}

@mixin mobile {
    @media (max-width: $mobile) {
        @content;// благоря этому мы можем прям в .class пописать медиазапрос (пример ниже)
    }
}
@mixin mobile-above {
    @media (min-width: $mobile-above) {
        @content;// благоря этому мы можем прямо в .class пописать медиазапрос (пример ниже)
    }
}

@mixin mobile-l-above {
    @media (min-width: $mobile-l-above) {
        @content;// благоря этому мы можем прямо в .class пописать медиазапрос (пример ниже)
    }
}

@mixin mobile-s {
    @media (max-width: $mobile-s) {
        @content;// благоря этому мы можем прям в .class пописать медиазапрос (пример ниже)
    }
}
@mixin mobile-s-above {
    @media (min-width: $mobile-s-above) {
        @content;// благоря этому мы можем прямо в .class пописать медиазапрос (пример ниже)
    }
}

/*
Прописываем в SCSS:

.element {
    padding-block: 100px;
    font-size: 36px;

    @include desktop { - обратились к @mixin который в свою очередь обратился к @media кторый обратился к @content, 
        padding-block: 50px;
        font-size: 18px;  
    }
}

Получаем в CSS:

.element {
  padding-block: 100px;
  font-size: 36px;
}
@media (max-width: 1280px) {
  .element {
    padding-block: 50px;
    font-size: 18px;
  }
}
*/
// Делаем чтобы на тач устройствах кнопка не залипала

//Этот сработает только на тех устройствах где наведение реализуемо (ПК)
@mixin hover {
    @media (hover: hover) {  //hover - это свойство, которое помогает определить возможномть наведения. И оно имеет два значения: hover - то есть можно навести и none - наведение невозможно. 
      &:hover {     // знак & будет ссылаться на тот элемент в котором мы пропишем mixin и тут работает как и задуманно - при наведении 
        @content;
      }
    }   
//этот сработает только на мобильных устройствах с touch экраном где навести нельзя
    @media (hover: none) {   
        &:active {           // тут только при нажатии (пример ниже)
            @content;
          }
    }
}
/*
button {
     background-color: lightseagreen;

    @include hover {
        background-color: lightcoral;     
}
}
*/